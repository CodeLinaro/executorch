name: Run all unittests

on:
  workflow_call:
    inputs:
      docker-image:
        required: true
        type: string
        description: Name of the docker image to use.
      runner:
        required: false
        type: string
        default: 'linux.2xlarge'
        description: The default runner for PyTorch infra.
      python-version:
        required: false
        type: string
        default: '3.10'

jobs:
  unittest:
    name: unittest
    uses: pytorch/test-infra/.github/workflows/linux_job.yml@main
    with:
      runner: ${{ inputs.runner }}
      docker-image: ${{ inputs.docker-image }}
      submodules: 'true'
      ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || github.sha }}
      timeout: 60
      script: |
        set -eux

        # The generic Linux job chooses to use base env, not the one setup by the image
        CONDA_ENV=$(conda env list --json | jq -r ".envs | .[-1]")
        conda activate "${CONDA_ENV}"

        # Just need to install executorch, everything else has been setup
        pip install .

        # Build //extension/pybindings:portable_lib. Example path:
        # buck-out/v2/gen/root/524f8da68ea2a374/extension/pybindings/__portable_lib__/portable_lib.so
        SO_LIB_DIR=$(buck2 build //extension/pybindings:portable_lib --show-output | cut -d' ' -f2 | xargs dirname)

        # Let LD_LIBRARY_PATH include libtorch_python directory
        PYTHON_LIB_DIR=$(python -c 'from distutils.sysconfig import get_python_lib; print(get_python_lib())')
        export LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:${PYTHON_LIB_DIR}/torch/lib

        # Let PYTHONPATH include the output directory so that portable_lib.so can be loaded into Python.
        export PYTHONPATH=${PYTHONPATH}:${SO_LIB_DIR}:${PYTHON_LIB_DIR}/torch/lib

        # Generate a shim file in extension/pybindings/portable_lib/
        SHIM_PY="${PYTHON_LIB_DIR}/executorch/extension/pybindings/portable_lib.py"
        touch ${SHIM_PY}
        echo "from portable_lib import _load_for_executorch_from_buffer,_load_for_executorch_from_buffer,_load_for_executorch_from_bundled_program" > ${SHIM_PY}

        # Run pytest with coverage
        pytest --cov=./ --cov-report=xml
